# Generated by Django 3.1 on 2020-09-03 18:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(error_messages={'unique': 'This URL is already taken'}, help_text='Choose a custom URL to make your page your own! Remember - once you choose a URL, you wonâ€™t be able to change it later.', max_length=30, null=True, unique=True, verbose_name='Your Custom URL')),
                ('reg', models.IntegerField(default=0)),
                ('outvote_texts', models.IntegerField(default=0)),
                ('zip_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message="ZIP Code must be 5 digits and entered in the format: '12345'.", regex='^\\d{5}$')], verbose_name='ZIP Code')),
                ('phone', models.CharField(help_text='Use the same phone number that you used to register your Outvote account, if you have one', max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be 10 digits and entered in the format: '1234567890'.", regex='^\\d{10}$')])),
                ('can_text', models.BooleanField(default=False, verbose_name='By signing up, you consent to receive periodic text messages from When We All Vote (56005). Message and data rates may apply. Text HELP for more information. Text STOP to stop receiving messages.')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Last Name')),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to='core.volunteer')),
            ],
        ),
    ]
